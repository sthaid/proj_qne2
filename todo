reversi
tic tack toe
blackjack
pong
compass
lat/long

-----

limit use of int32_t

clean this up
flashlight app
menu code
use tar 
use one symlink to src dir


---------

https://developer.android.com/ndk/reference/group/sensor


https://stackoverflow.com/questions/4200119/access-android-sensors-via-ndk
sample code using android ndk to access sensors






xxxxxxxxxxxxxxxx


"android ndk example to get compass reading"

#include <android/sensor.h>

// ... (Get the sensor manager and event queue)

// Find the magnetic field sensor
ASensor* magneticSensor = ASensorManager_getDefaultSensor(sensor_manager, ASENSOR_TYPE_MAGNETIC_FIELD);

// Enable the sensor
ASensorEventQueue_enableSensor(queue, magneticSensor);

// Read sensor data in a loop
while (true) {
    ASensorEvent event;
    int eventsRead = ASensorEventQueue_getEvents(queue, &event, 1);

    if (eventsRead > 0) {
        // Process magnetic field data (event.data[0], event.data[1], event.data[2])
        // You'll need to implement your own sensor fusion logic
        // to calculate the compass heading from accelerometer and magnetometer data.
        // There is no dedicated ASENSOR_TYPE_COMPASS or ASENSOR_TYPE_ORIENTATION in the NDK directly for the compass heading.
    }
}

// Disable and destroy the sensor and event queue
ASensorEventQueue_disableSensor(queue, magneticSensor);
ASensorManager_destroyEventQueue(sensor_manager, queue);

==================
APP DIR
==================

aliases: 
alias app_top='~/proj/proj_qne2/android-project/SDL2/build/org.sthaid.qne2'
alias app='~/proj/proj_qne2/android-project/SDL2/build/org.sthaid.qne2/app'
alias app_jni='~/proj/proj_qne2/android-project/SDL2/build/org.sthaid.qne2/app/jni'
alias app_jni_src='~/proj/proj_qne2/android-project/SDL2/build/org.sthaid.qne2/app/jni/src'
alias app_src_main='~/proj/proj_qne2/android-project/SDL2/build/org.sthaid.qne2/app/src/main'

--------
top = SDL2/build/org.sthaid.qne2
--------
./gradle/wrapper/gradle-wrapper.jar
./gradle/wrapper/gradle-wrapper.properties
./gradlew.bat
./build.gradle
./gradlew
./gradle.properties
./settings.gradle

-------
app
-------
./app/build.gradle
./app/proguard-rules.pro

-------
app/jni
-------
./app/jni/Android.mk
./app/jni/Application.mk
./app/jni/SDL/Android.mk
./app/jni/CMakeLists.txt

./app/jni/src/Android.mk       : source files
./app/jni/src/stub.c
./app/jni/src/CMakeLists.txt

--------
app/src/main/
--------
./app/src/main/AndroidManifest.xml

--------
app/src/main/java
--------
./app/src/main/java/org/libsdl/app/SDLActivity.java
./app/src/main/java/org/libsdl/app/SDLAudioManager.java
./app/src/main/java/org/libsdl/app/HIDDeviceUSB.java
./app/src/main/java/org/libsdl/app/HIDDeviceManager.java
./app/src/main/java/org/libsdl/app/HIDDevice.java
./app/src/main/java/org/libsdl/app/SDL.java
./app/src/main/java/org/libsdl/app/SDLSurface.java
./app/src/main/java/org/libsdl/app/HIDDeviceBLESteamController.java
./app/src/main/java/org/libsdl/app/SDLControllerManager.java
./app/src/main/java/org/sthaid/qne2/Qne2Activity.java

--------
app/src/main/res
--------
./app/src/main/res/mipmap-mdpi/ic_launcher.png
./app/src/main/res/mipmap-hdpi/ic_launcher.png
./app/src/main/res/mipmap-xhdpi/ic_launcher.png
./app/src/main/res/values/strings.xml                : game string
./app/src/main/res/values/colors.xml
./app/src/main/res/values/styles.xml
./app/src/main/res/mipmap-xxhdpi/ic_launcher.png
./app/src/main/res/mipmap-xxxhdpi/ic_launcher.png


==================
todo
==================

git ls-files --others --exclude-standard

build scripts
- rename to android-build
- assets dir
- script steps to get SDL2 and SDL2_ttf
- dont patch, just copy, and save orig
menu
run_prog
mkdir
destroy and recreate the repo


https://developer.android.com/ndk/samples

https://github.com/android/ndk-samples/tree/main
git clone https://github.com/android/ndk-samples

sdl
- add sdl event support

creaet main menu, 

toc file
- prog name,  prog file list

add sdl routines to picoc

find ndk routines for
- compass
- level
- flashlight
- lat/long

---------------

version.c, put this in startup line, include build data time and git commit

updae the Android direcoty generator

rename android-project dir to just android

gcc -o hello hello.c, doesn't build, perhaps a gcc switch

--- later ---

make git repo for qne_sdl3
- make SDL3 version

qne app
- add auto start service when phone boots
- add fuse support, connect to fuse svc running on my ubunut pc

================
c interpreter
================

https://github.com/jpoirier/picoc
git clone https://github.com/jpoirier/picoc

cd picoc
git diff 865ae807ff6384ec0cded86f84cec9d8c118956f HEAD .



================
sdl3
===============

references:
- https://wiki.libsdl.org/SDL2/Android
- https://github.com/libsdl-org/SDL/blob/main/docs/README-android.md

Android:
- Using the SDL3 Android Archive (.aar)

build on linux
- https://github.com/libsdl-org/SDL/blob/main/docs/INTRO-cmake.md
- git clone https://github.com/libsdl-org/SDL

build example code
- gcc -I vendored/SDL/include -o clear clear.c  build/libSDL3.so
- LD_LIBRARY_PATH=build clear

misc:  SDL2
- sudo apt install libsdl2-dev
- $pkg-config --libs --cflags sdl2             # example for sdl2
    -D_REENTRANT -I/usr/include/SDL2 -lSDL2

==========================
android
==========================

Enable Developer Mode on your device
- Settings > About Phone > Softwae Information:
  - Tap Build Number 7 times
- Settings > Developer Options:
  - Turn on Developer Options using the slider at the top;
    note that it may already be turned on
  - Enable USB Debugging
- Plug in USB Cable, and when asked to Allow USB Debugging, select OK.

Enable Developer Mode on your device, using tcp
- with usb cable connected
- adb tcpip 5555
- disconnect usb cable
- adb connect 192.168.1.243:5555

references:
- build SDL3 for Android
  - https://wiki.libsdl.org/SDL3/Android
- how to build a simple app
   https://github.com/libsdl-org/SDL/blob/main/docs/README-android.md 
- sdkmanager - use this instead of AndoidStudio
   https://developer.android.com/tools/sdkmanager

steps
- install cmdline-tools, instructions -
    https://developer.android.com/tools/sdkmanager
- instal minimal java
    sudo apt install openjdk-17-jdk ant android-sdk-platform-tools-common
    java -version   # should be openjdk version "17.0.15" 2025-04-15
- install android sdk packages
    cd ~/android_sdk/cmdline-tools/latest/bin
    ./sdkmanager --install "platforms;android-30" 
    ./sdkmanager --install "build-tools;30.0.2"
    ./sdkmanager --install "ndk;21.3.6528147"
    ./sdkmanager --install "ndk;26.3.11579264"
- add to bash_profile
    # env vars
    if [ "$ENV_INITIALIZED" = "" ]; then
      export EDITOR=vi
      export GIT_EXTERNAL_DIFF=~/bin/git_external_diff

      export ANDROID_HOME=~/android_sdk
      export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/21.3.6528147
      export PATH=$PATH:$ANDROID_HOME/ndk/21.3.6528147
      export PATH=$PATH:$ANDROID_HOME/build-tools
      export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

      ENV_INITIALIZED=true
    fi
- install adb debugger
    sudo apt install android-tools-adb android-tools-fastboot
    adb version    # test
    adb shell      # test, need to accept on phone

Notes from : https://github.com/libsdl-org/SDL/blob/main/docs/README-android.md 
- Regarding SDL3 ...
  - Android SDK (version 35 or later)    https://developer.android.com/sdk/index.html
  - Android NDK r15c or later            https://developer.android.com/tools/sdk/ndk/index.html
  - Minimum API level supported by SDL: 21 (Android 5.0)

obsolete notes regarding android-studio
- https://developer.android.com/studio/install
   - sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
   - download studio tar file:  android-studio-2025.1.1.13-linux.tar.gz
   - tar -xvf Downloads/android-studio-2025.1.1.13-linux.tar.gz 
   - cd android-studio/bin
   - ./studio.sh
- https://developer.android.com/tools/sdk/ndk/index.html
   - https://developer.android.com/studio/projects/install-ndk
   - studio -> New Project -> No Activity? -> Next -> Name=Test1 -> Finish
   - Menu -> Tools -> SDK Manager -> SDK Tools -> Check the following
       NDK Side by Side
       Android SDK Command Line Tools
       CMake
     Ok

========================================
========================================
============  BACKUP INFO  =============
========================================
========================================


==============
fuse
==============

references
1- https://github.com/libfuse/libfuse
   git clone https://github.com/libfuse/libfuse
2- https://libfuse.github.io

devel pkg
- sudo apt install libfuse3-dev
- pkg-config fuse3 --cflags --libs
    -I/usr/include/fuse3 -lfuse3 -lpthread
- https://libfuse.github.io/doxygen/

what fuse patckages are installed
- dpkg -l | grep fuse

building test program
- gcc -Wall t1.c `pkg-config fuse3 --cflags --libs` -o t1
- gcc -Wall t2.c `pkg-config fuse3 --cflags --libs` -o t2
